{"ast":null,"code":"import _classCallCheck from \"/Users/cameronking/Desktop/duke-eats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cameronking/Desktop/duke-eats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cameronking/Desktop/duke-eats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cameronking/Desktop/duke-eats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cameronking/Desktop/duke-eats/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cameronking/Desktop/duke-eats/src/components/Cart/cartContents.js\";\nimport React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport CartItem from \"./cartItem.js\";\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from \"react-router-dom\";\n\nvar Cart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cart, _Component);\n\n  function Cart(props) {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cart).call(this, props));\n\n    _this.clearCart = function () {\n      var uid = _this.state.uid;\n\n      _this.props.firebase.db.ref(\"users/\" + uid).child(\"/cart\").set(null);\n\n      window.location.reload();\n    };\n\n    _this.checkOut = function () {\n      _this.props.history.push(ROUTES.CHECKOUT);\n    };\n\n    _this.state = {\n      items: [],\n      total: 0,\n      uid: _this.props.firebase.auth.currentUser.uid,\n      difLoc: false,\n      loc: ''\n    };\n\n    _this.getCart();\n\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"getCart\",\n    value: function getCart() {\n      var _this$state = this.state,\n          items = _this$state.items,\n          uid = _this$state.uid,\n          difLoc = _this$state.difLoc,\n          loc = _this$state.loc;\n      var self = this;\n      var cartRef = this.props.firebase.db.ref(\"users/\" + uid).child(\"/cart\");\n      cartRef.once(\"value\", function (snapshot) {\n        snapshot.forEach(function (item) {\n          var location = item.val().location;\n\n          if (loc === '') {\n            loc = location;\n            self.setState({\n              loc: loc\n            });\n          }\n\n          if (difLoc === false && location !== loc) {\n            difLoc = true;\n          }\n\n          location = location.charAt(0).toUpperCase() + location.slice(1);\n          var key = item.key;\n          var name = item.val().name;\n          var price = item.val().price;\n          var quantity = item.val().quantity;\n          var notes = item.val().notes;\n          items.push({\n            ID: key,\n            name: name,\n            price: price,\n            quantity: quantity,\n            notes: notes,\n            location: location\n          });\n          self.setState({\n            items: items,\n            difLoc: difLoc\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          items = _this$state2.items,\n          difLoc = _this$state2.difLoc;\n      var empty = items.length === 0;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, items.map(function (p) {\n        return React.createElement(CartItem, {\n          ID: p.ID,\n          name: p.name,\n          price: p.price,\n          notes: p.notes,\n          quantity: p.quantity,\n          location: p.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      }), items.length === 0 && React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Cart is empty. :( \"), difLoc === true && React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"All items in cart must be from same restaurant.\"), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light mx-auto\",\n        onClick: this.clearCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Clear Cart\"), \" \\xA0\", React.createElement(\"button\", {\n        disabled: difLoc || empty,\n        type: \"submit\",\n        className: \"btn btn-light mx-auto\",\n        onClick: this.checkOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Check Out!\"));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nexport default withRouter(withFirebase(Cart));","map":{"version":3,"sources":["/Users/cameronking/Desktop/duke-eats/src/components/Cart/cartContents.js"],"names":["React","Component","withFirebase","CartItem","ROUTES","withRouter","Cart","props","clearCart","uid","state","firebase","db","ref","child","set","window","location","reload","checkOut","history","push","CHECKOUT","items","total","auth","currentUser","difLoc","loc","getCart","self","cartRef","once","snapshot","forEach","item","val","setState","charAt","toUpperCase","slice","key","name","price","quantity","notes","ID","empty","length","map","p"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport CartItem from \"./cartItem.js\";\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from \"react-router-dom\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      total: 0,\n      uid: this.props.firebase.auth.currentUser.uid,\n      difLoc: false,\n      loc: ''\n    };\n    this.getCart();\n  }\n\n  getCart() {\n    var { items, uid, difLoc, loc } = this.state;\n    const self = this;\n    var cartRef = this.props.firebase.db.ref(\"users/\" + uid).child(\"/cart\");\n    cartRef.once(\"value\", function(snapshot) {\n      snapshot.forEach(function(item) {\n        var location = item.val().location;\n        if (loc === ''){\n          loc = location;\n          self.setState({loc: loc});\n        }\n        if (difLoc === false && location !== loc){\n          difLoc = true;\n        }\n        location = location.charAt(0).toUpperCase() + location.slice(1);\n        var key = item.key;\n        var name = item.val().name;\n        var price = item.val().price;\n        var quantity = item.val().quantity;\n        var notes = item.val().notes;\n        items.push({\n          ID: key,\n          name: name,\n          price: price,\n          quantity: quantity,\n          notes: notes, \n          location: location\n        });\n        self.setState({ items: items, difLoc: difLoc });\n      });\n    });\n  }\n\n  clearCart = () => {\n    const { uid } = this.state;\n    this.props.firebase.db\n      .ref(\"users/\" + uid)\n      .child(\"/cart\")\n      .set(null);\n    window.location.reload();\n  };\n\n  checkOut = () => {\n    this.props.history.push(ROUTES.CHECKOUT);\n  }\n\n\n  render() {\n    const { items, difLoc } = this.state;\n    const empty = (items.length===0);\n    return (\n      <div>\n        {items.map(p => (\n          <CartItem\n            ID={p.ID}\n            name={p.name}\n            price={p.price}\n            notes={p.notes}\n            quantity={p.quantity}\n            location={p.location}\n          />\n        ))}\n        {items.length === 0 && <h2>Cart is empty. :( </h2>}\n        {difLoc===true && <h2>All items in cart must be from same restaurant.</h2>}\n        <button type=\"submit\" className=\"btn btn-light mx-auto\" onClick={this.clearCart}>\n          Clear Cart\n        </button> &nbsp;\n        <button disabled={difLoc || empty} type=\"submit\" className=\"btn btn-light mx-auto\" onClick={this.checkOut}>Check Out!</button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(Cart));\n"]},"metadata":{},"sourceType":"module"}